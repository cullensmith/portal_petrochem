# Generated by Django 5.1.7 on 2025-04-15 06:50

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bordercrossing_Electric',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('fid', models.IntegerField()),
                ('opername', models.CharField(blank=True, max_length=75, null=True)),
                ('pipename', models.CharField(blank=True, max_length=100, null=True)),
                ('geomjson', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': '"eia"."bordercrossing_electric"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bordercrossing_Liquids',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('fid', models.IntegerField()),
                ('pipeline', models.CharField(blank=True, max_length=254, null=True)),
                ('owner', models.CharField(blank=True, max_length=254, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=254, null=True)),
                ('county', models.CharField(blank=True, max_length=254, null=True)),
                ('state', models.CharField(blank=True, max_length=254, null=True)),
                ('frmstate', models.CharField(blank=True, max_length=254, null=True)),
                ('frmcountry', models.CharField(blank=True, max_length=254, null=True)),
                ('tostate', models.CharField(blank=True, max_length=254, null=True)),
                ('tocountry', models.CharField(blank=True, max_length=254, null=True)),
                ('typeprod', models.CharField(blank=True, max_length=254, null=True)),
                ('num_pipes', models.IntegerField()),
                ('diameter', models.CharField(blank=True, max_length=254, null=True)),
                ('maxoppress', models.IntegerField()),
                ('source', models.CharField(blank=True, max_length=254, null=True)),
                ('period', models.IntegerField()),
                ('x', models.CharField(blank=True, max_length=500, null=True)),
                ('y', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': '"eia"."bordercrossing_liquids"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bordercrossing_Naturalgas',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('fid', models.IntegerField()),
                ('pipeline', models.CharField(blank=True, max_length=254, null=True)),
                ('owner', models.CharField(blank=True, max_length=254, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=254, null=True)),
                ('county', models.CharField(blank=True, max_length=254, null=True)),
                ('state', models.CharField(blank=True, max_length=254, null=True)),
                ('frmstate', models.CharField(blank=True, max_length=254, null=True)),
                ('frmcountry', models.CharField(blank=True, max_length=254, null=True)),
                ('tostate', models.CharField(blank=True, max_length=254, null=True)),
                ('tocountry', models.CharField(blank=True, max_length=254, null=True)),
                ('vol_mmcfd', models.IntegerField()),
                ('source', models.CharField(blank=True, max_length=254, null=True)),
                ('period', models.IntegerField()),
                ('x', models.CharField(blank=True, max_length=500, null=True)),
                ('y', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': '"eia"."bordercrossing_naturalgas"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Compressors',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('y', models.FloatField(blank=True, null=True)),
                ('x', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('elec_compr', models.CharField(blank=True, max_length=50, null=True)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('zip4', models.CharField(blank=True, max_length=50, null=True)),
                ('zip', models.CharField(blank=True, max_length=50, null=True)),
                ('exp_power', models.CharField(blank=True, max_length=50, null=True)),
                ('fid', models.CharField(blank=True, max_length=50, null=True)),
                ('source', models.CharField(blank=True, max_length=50, null=True)),
                ('gas_compre', models.CharField(blank=True, max_length=50, null=True)),
                ('num_units', models.CharField(blank=True, max_length=50, null=True)),
                ('objectid', models.CharField(blank=True, max_length=50, null=True)),
                ('cert_hp', models.CharField(blank=True, max_length=50, null=True)),
                ('exp_other', models.CharField(blank=True, max_length=50, null=True)),
                ('gcompid', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('op_date_pe', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.CharField(blank=True, max_length=50, null=True)),
                ('exp_fuel', models.CharField(blank=True, max_length=50, null=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('op_num_com', models.CharField(blank=True, max_length=50, null=True)),
                ('op_comp_hr', models.CharField(blank=True, max_length=50, null=True)),
                ('plant_cost', models.CharField(blank=True, max_length=50, null=True)),
                ('county', models.CharField(blank=True, max_length=50, null=True)),
                ('posrel', models.CharField(blank=True, max_length=50, null=True)),
                ('val_date', models.CharField(blank=True, max_length=50, null=True)),
                ('website', models.CharField(blank=True, max_length=50, null=True)),
                ('pipeco', models.CharField(blank=True, max_length=50, null=True)),
                ('compid', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('val_method', models.CharField(blank=True, max_length=50, null=True)),
                ('naics_desc', models.CharField(blank=True, max_length=50, null=True)),
                ('naics_code', models.CharField(blank=True, max_length=50, null=True)),
                ('operator', models.CharField(blank=True, max_length=50, null=True)),
                ('sourcedate', models.CharField(blank=True, max_length=50, null=True)),
                ('countyfips', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': '"eia"."compressor_stations_naturalgas"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Counties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geomjson', models.CharField(max_length=255)),
                ('statename', models.CharField(max_length=255)),
                ('stusps', models.CharField(max_length=10)),
                ('county', models.CharField(max_length=255)),
            ],
            options={
                'db_table': '"public"."counties_json"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Electric_Generator_Inventory_860m',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('status_1', models.CharField(blank=True, max_length=500, null=True)),
                ('rpt_dt', models.CharField(blank=True, max_length=500, null=True)),
                ('ent_id', models.CharField(blank=True, max_length=500, null=True)),
                ('ent_name', models.CharField(blank=True, max_length=500, null=True)),
                ('plnt_id', models.CharField(blank=True, max_length=500, null=True)),
                ('plnt_nm', models.CharField(blank=True, max_length=500, null=True)),
                ('state', models.CharField(blank=True, max_length=500, null=True)),
                ('county', models.CharField(blank=True, max_length=500, null=True)),
                ('balauth', models.CharField(blank=True, max_length=500, null=True)),
                ('sector', models.CharField(blank=True, max_length=500, null=True)),
                ('gen_id', models.CharField(blank=True, max_length=500, null=True)),
                ('npl_cap_mw', models.CharField(blank=True, max_length=500, null=True)),
                ('techn', models.CharField(blank=True, max_length=500, null=True)),
                ('egy_src', models.CharField(blank=True, max_length=500, null=True)),
                ('prm_mvr', models.CharField(blank=True, max_length=500, null=True)),
                ('opr_mo', models.CharField(blank=True, max_length=500, null=True)),
                ('opr_yr', models.CharField(blank=True, max_length=500, null=True)),
                ('pln_mo', models.CharField(blank=True, max_length=500, null=True)),
                ('pln_yr', models.CharField(blank=True, max_length=500, null=True)),
                ('retr_mo', models.CharField(blank=True, max_length=500, null=True)),
                ('retr_yr', models.CharField(blank=True, max_length=500, null=True)),
                ('status_2', models.CharField(blank=True, max_length=500, null=True)),
                ('lat', models.CharField(blank=True, max_length=500, null=True)),
                ('long', models.CharField(blank=True, max_length=500, null=True)),
                ('x', models.CharField(blank=True, max_length=500, null=True)),
                ('y', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': '"eia"."electric_generator_inventory_860m"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Markethubs_Hgl',
            fields=[
                ('ftid', models.IntegerField()),
                ('fid', models.IntegerField()),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('facility', models.CharField(blank=True, max_length=50, null=True)),
                ('longitude', models.CharField(blank=True, max_length=50, null=True)),
                ('latitude', models.CharField(blank=True, max_length=50, null=True)),
                ('x', models.CharField(blank=True, max_length=50, null=True)),
                ('y', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': '"eia"."markethubs_hgl"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Markethubs_Naturalgas',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('fid', models.IntegerField()),
                ('hubname', models.CharField(blank=True, max_length=50, null=True)),
                ('period', models.IntegerField()),
                ('latitude', models.CharField(blank=True, max_length=50, null=True)),
                ('longitude', models.CharField(blank=True, max_length=50, null=True)),
                ('x', models.CharField(blank=True, max_length=50, null=True)),
                ('y', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': '"eia"."markethubs_naturalgas"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pipeline_Crudeoil',
            fields=[
                ('geomjson', models.CharField(blank=True, max_length=500, null=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('opername', models.CharField(blank=True, max_length=50, null=True)),
                ('pipename', models.CharField(blank=True, max_length=50, null=True)),
                ('fid', models.IntegerField()),
            ],
            options={
                'db_table': '"pipeline"."crudeoil"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pipeline_FracTracker',
            fields=[
                ('ftid', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(blank=True, max_length=30, null=True)),
                ('company', models.CharField(blank=True, max_length=80, null=True)),
                ('estinservd', models.CharField(blank=True, max_length=50, null=True)),
                ('loresdelet', models.CharField(blank=True, max_length=5, null=True)),
                ('res', models.CharField(blank=True, max_length=50, null=True)),
                ('srcelink', models.CharField(blank=True, max_length=250, null=True)),
                ('product', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('notes', models.CharField(blank=True, max_length=50, null=True)),
                ('digname', models.CharField(blank=True, max_length=100, null=True)),
                ('digdate', models.CharField(blank=True, max_length=50, null=True)),
                ('datasrce', models.CharField(blank=True, max_length=100, null=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('length', models.FloatField(blank=True, null=True)),
                ('diameter', models.CharField(blank=True, max_length=50, null=True)),
                ('geomjson', models.CharField(blank=True, max_length=7000000, null=True)),
            ],
            options={
                'db_table': '"pipeline"."fractracker"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pipeline_hgl',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('fid', models.IntegerField()),
                ('opername', models.CharField(blank=True, max_length=150, null=True)),
                ('pipename', models.CharField(blank=True, max_length=150, null=True)),
                ('geomjson', models.CharField(blank=True, max_length=1600, null=True)),
            ],
            options={
                'db_table': '"pipeline"."hgl"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pipeline_Naturalgas',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('fid', models.IntegerField()),
                ('typepipe', models.CharField(blank=True, max_length=10, null=True)),
                ('operator', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('geomjson', models.CharField(blank=True, max_length=48000, null=True)),
            ],
            options={
                'db_table': '"pipeline"."naturalgas"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pipeline_Petroleum',
            fields=[
                ('geom', models.CharField(blank=True, max_length=100, null=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('fid', models.IntegerField()),
                ('opername', models.CharField(blank=True, max_length=75, null=True)),
                ('pipename', models.CharField(blank=True, max_length=100, null=True)),
                ('geomjson', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': '"pipeline"."petroleum"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='States',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geomjson', models.CharField(max_length=255)),
                ('statename', models.CharField(max_length=255)),
            ],
            options={
                'db_table': '"public"."states_json"',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
        ),
    ]
